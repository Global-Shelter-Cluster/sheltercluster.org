<?php

include_once 'cluster_context.admin.inc';

/**
 * Generates links for the Editor Menu.
 * @param $node
 *  The node being viewed.
 * @return array
 *  Returns an array usable by theme_links() as "#links".
 */
function cluster_context_links($node) {
  if (!user_is_logged_in()) {
    // Logged out.
    return FALSE;
  }
  global $user;
  if (!og_is_member('node', $node->nid, 'user', $user)) {
    // Current user does not belong to the group.
    return FALSE;
  }

  $manager = GroupContentManager::getInstance($node);

  $links = array();

  $links['new-document'] = array(
    'title' => t('Create document'),
    'href' => 'node/add/document',
    'query' => array('group' => $node->nid, 'destination' => 'node/' . $node->nid),
  );

  $links['new-discussion'] = array(
    'title' => t('Create discussion'),
    'href' => 'node/add/discussion',
    'query' => array('group' => $node->nid, 'destination' => 'node/' . $node->nid),
  );

  switch ($node->type) {
    case 'geographic_region':
      $links['new-child-region'] = array(
        'title' => t('New child region'),
        'href' => 'node/add/geographic-region',
        'query' => array('region' => $node->nid, 'destination' => 'node/' . $node->nid),
      );

      if (!$manager->getStrategicAdvisory()) {
        $links['new-strategic-advisory'] = array(
          'title' => t('New strategic advisory group'),
          'href' => 'node/add/strategic-advisory',
          'query' => array('region' => $node->nid, 'destination' => 'node/' . $node->nid),
        );
      }

      $links['new-response'] = array(
        'title' => t('New response'),
        'href' => 'node/add/response',
        'query' => array('region' => $node->nid, 'destination' => 'node/' . $node->nid),
      );

      break;
    case 'response':
      if (!$manager->getStrategicAdvisory()) {
        $links['new-strategic-advisory'] = array(
          'title' => t('New strategic advisory group'),
          'href' => 'node/add/strategic-advisory',
          'query' => array('response' => $node->nid, 'destination' => 'node/' . $node->nid),
        );
      }

      $links['new-child-response'] = array(
        'title' => t('New child response'),
        'href' => 'node/add/response',
        'query' => array('response' => $node->nid, 'destination' => 'node/' . $node->nid),
      );

      $links['new-hub'] = array(
        'title' => t('New hub'),
        'href' => 'node/add/hub',
        'query' => array('response' => $node->nid, 'destination' => 'node/' . $node->nid),
      );

      break;
  }

  return $links;
}
