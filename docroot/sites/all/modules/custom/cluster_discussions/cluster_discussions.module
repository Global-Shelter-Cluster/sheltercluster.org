<?php
/**
 * @file
 * Code for the cluster_discussions feature.
 */

include_once 'cluster_discussions.features.inc';

/**
 *  Implements hook_menu().
 */
function cluster_discussions_menu() {
  $items['node/%/discussions'] = array(
    'title' => 'Discussions',
    'page callback' => 'cluster_discussions_all',
    'page arguments' => array(1),
    'access callback' => 'og_is_group',
    'access arguments' => array(0, 1),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function cluster_discussions_all($nid) {
  $query = new EntityFieldQuery();
  $res = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'discussion')
    ->fieldCondition('og_group_ref', 'target_id', $nid)
    ->propertyCondition('status', NODE_PUBLISHED)
    ->propertyOrderBy('changed', 'DESC')
    ->pager(5)
    ->execute();

  if (!isset($res['node'])) {
    return NULL;
  }

  $ret = GroupPageContent::getList(array_keys($res['node']), 'teaser', 'cluster_discussions_all');
  $ret['pager'] = array(
    '#theme' => 'pager',
  );

  return $ret;
}

/**
 * Implements hook_theme().
 */
function cluster_discussions_theme() {
  return array(
    'cluster_discussions_all' => array(
      'file' => 'theme/cluster_discussions.theme.inc',
      'render element' => 'element',
    ),
  );
}