<?php
/**
 * @file
 * Code for the cluster_docs feature.
 */

include_once 'cluster_docs.features.inc';

/**
 *  Implements hook_menu().
 */
function cluster_docs_menu() {
  $items['node/%/documents'] = array(
    'title' => 'Documents',
    'page callback' => 'cluster_docs_all',
    'page arguments' => array(1),
    'access callback' => 'og_is_group',
    'access arguments' => array(0, 1),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function cluster_docs_all($nid) {
  $query = new EntityFieldQuery();
  $res = $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'document')
    ->fieldCondition('og_group_ref', 'target_id', $nid)
    ->propertyCondition('status', NODE_PUBLISHED)
    ->propertyOrderBy('changed', 'DESC')
    ->pager(5)
    ->execute();

  if (!isset($res['node'])) {
    return NULL;
  }

  $ret = GroupPageContent::getList(array_keys($res['node']), 'teaser', 'cluster_docs_all');
  $ret['pager'] = array(
    '#theme' => 'pager',
  );

  return $ret;
}

/**
 *  Get all key docs for a group, grouped by category.
 * @param $gid
 *  Group node id.
 * @return
 *  array of node ids for document nodes keyed by category vocabulary machine name, or FALSE if no matching result.
 */
function cluster_docs_get_grouped_key_docs($gid) {
  // Use the field_group module API to generate a list of categories.
  $info = field_group_info_groups('node', 'document', 'form', TRUE);
  $basic_tag_fields = $info['group_basic_tags']->children;
  $advanced_tag_fields = $info['group_advanced_tags']->children;
  $categories = array_merge($basic_tag_fields, $advanced_tag_fields);

  $grouped_docs = array();
  foreach ($categories as $category) {
    $query = new EntityFieldQuery();
    $res = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'document')
      ->fieldCondition('og_group_ref', 'target_id', $gid)
      ->fieldCondition('field_key_document', 'value', 1)
      ->fieldCondition($category, 'tid', 'NULL', '!=')
      ->propertyCondition('status', NODE_PUBLISHED)
      ->execute();
    if (isset($res['node'])) {
      $grouped_docs[$category] = array_keys($res['node']);
    }
  }
  dpm($grouped_docs);
}

/**
 * Implements hook_theme().
 */
function cluster_docs_theme() {
  return array(
    'cluster_docs_all' => array(
      'file' => 'theme/cluster_docs.theme.inc',
      'render element' => 'element',
    ),
    'cluster_docs_cards' => array(
      'file' => 'theme/cluster_docs.theme.inc',
      'variables' => array(
        'category' => '',
        'nodes' => array(),
      ),
      'template' => 'theme/cluster_docs_cards'
    ),
  );
}
