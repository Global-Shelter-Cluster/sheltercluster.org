<?php

function cluster_events_update_7001() {
  $items = db_select('field_data_field_recurring_event_date', 'date')
    ->fields('date')
    ->execute()
    ->fetchAll();

  foreach ($items as $item) {
    $data = array(
      'entity_type' => $item->entity_type,
      'bundle' => $item->bundle,
      'deleted' => $item->deleted,
      'entity_id' => $item->entity_id,
      'revision_id' => $item->revision_id,
      'language' => $item->language,
      'delta' => $item->delta,
      'field_recurring_event_date2_value' => $item->field_recurring_event_date_value,
      'field_recurring_event_date2_value2' => NULL,
      'field_recurring_event_date2_rrule' => $item->field_recurring_event_date_rrule,
    );

    db_insert('field_data_field_recurring_event_date2')
      ->fields($data)
      ->execute();

    db_insert('field_revision_field_recurring_event_date2')
      ->fields($data)
      ->execute();

    field_cache_clear();
  }
}

/**
 * Revert cluster_events.
 */
function cluster_events_update_7002() {
  features_revert_module('cluster_events');
}

/**
 * Delete field_recurring_event_date.
 */
function cluster_events_update_7003() {
  field_delete_field('field_recurring_event_date');
}

/**
 * Revert cluster_events field instances.
 */
function cluster_events_update_7004() {
  features_revert(array('cluster_events' => array('field_instance')));
}

/**
 * Revert cluster_events field bases.
 */
function cluster_events_update_7005() {
  features_revert(array('cluster_events' => array('field_base')));
}

/**
 * Update dates in field_data_field_recurring_event_date2.
 */
function cluster_events_update_7006() {
  $rows = db_query("SELECT * FROM {field_data_field_recurring_event_date2}");

  foreach ($rows as $row) {
    $fields = array();

    if (!is_null($row->field_recurring_event_date2_value)) {
      $timestamp = strtotime($row->field_recurring_event_date2_value);
      $timestamp = $timestamp - (60 * 60 * 5);

      $fields['field_recurring_event_date2_value'] = date('Y-m-d H:i:s', $timestamp);
    }

    if (!is_null($row->field_recurring_event_date2_value2)) {
      $timestamp = strtotime($row->field_recurring_event_date2_value2);
      $timestamp = $timestamp - (60 * 60 * 5);

      $fields['field_recurring_event_date2_value2'] = date('Y-m-d H:i:s', $timestamp);
    }

    if (empty($fields)) {
      continue;
    }

    db_update('field_data_field_recurring_event_date2')
      ->fields($fields)
      ->condition('entity_id', $row->entity_id)
      ->execute();
  }
}

/**
 * Update dates in field_revision_field_recurring_event_date2.
 */
function cluster_events_update_7007() {
  $rows = db_query("SELECT * FROM {field_revision_field_recurring_event_date2}");

  foreach ($rows as $row) {
    $fields = array();

    if (!is_null($row->field_recurring_event_date2_value)) {
      $timestamp = strtotime($row->field_recurring_event_date2_value);
      $timestamp = $timestamp - (60 * 60 * 5);

      $fields['field_recurring_event_date2_value'] = date('Y-m-d H:i:s', $timestamp);
    }

    if (!is_null($row->field_recurring_event_date2_value2)) {
      $timestamp = strtotime($row->field_recurring_event_date2_value2);
      $timestamp = $timestamp - (60 * 60 * 5);

      $fields['field_recurring_event_date2_value2'] = date('Y-m-d H:i:s', $timestamp);
    }

    if (empty($fields)) {
      continue;
    }

    db_update('field_revision_field_recurring_event_date2')
      ->fields($fields)
      ->condition('revision_id', $row->revision_id)
      ->execute();
  }
}
