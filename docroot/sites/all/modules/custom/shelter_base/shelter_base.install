<?php

/**
 * @file
 *  Enable required modules and perform general updates using hook_update_N().
 */

/**
 * Implements hook_install().
 */
function shelter_base_install() {
  module_disable(array('dashboard', 'toolbar', 'overlay'));
  _shelter_base_modules_enable('core');
  _shelter_base_modules_enable('contrib');
  _shelter_base_modules_enable('custom');
  // Set default theme.
  shelter_base_update_7003();
}

function _shelter_base_module_enable_all() {
  $types = array('core', 'contrib', 'custom');
  foreach($types as $type) {
    _shelter_base_modules_enable($type);
  }
}

/**
 * Enable modules.
 * @param $type
 *   Module type: one of contrib, custom or core.
 */
function _shelter_base_modules_enable($type) {
  $f = '_shelter_base_required_' . $type;
  if (function_exists($f)) {
    foreach ($f() as $module) {
      if (! module_enable(array($module))) {
        watchdog('shelter_base', "Failed enabling $f $module", WATCHDOG_ERROR);
      }
    }
  }
}

/**
 * List of required contrib modules.
 */
function _shelter_base_required_contrib() {
  return array('addressfield', 'admin_menu', 'backup_migrate', 'chosen', 'ctools', 'date',
    'devel', 'email', 'entity', 'entity_translation',
    'uuid', 'uuid_features', 'url', 'views', 'views_ui', 'views_bulk_operations',
    'entityreference', 'facetapi', 'features', 'field_collection', 'field_group',
    'flag', 'i18n', 'i18n_menu', 'i18n_string', 'i18n_variable', 'imce', 'imce_wysiwyg', 'link',
    'libraries', 'name', 'og', 'og_access', 'og_register', 'og_ui', 'pathauto', 'respondjs', 'search_api',
    'search_api_db', 'search_api_facetapi', 'strongarm', 'title', 'token',
    'transliteration',  'underscore', 'uuid', 'uuid_features', 'url', 'variable',
    'views', 'views_ui', 'views_bulk_operations', 'wysiwyg',
  );
}

/**
 * List of required core modules.
 */
function _shelter_base_required_core() {
  return array('locale');
}

/**
 * List of required custom modules.
 */
function _shelter_base_required_custom() {
  return array('cluster_context', 'cluster_discussions', 'cluster_docs', 'cluster_events', 'cluster_libraries', 'cluster_og', 'cluster_search',
    'cluster_taxonomy', 'cluster_user', 'cluster_nav', 'cluster_nav_views', 'cluster_workflow', 'partial',
  );
}

/**
 * Update required module list.
 */
function shelter_base_update_7001() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Update required module list.
 */
function shelter_base_update_7002() {
  _shelter_base_module_enable_all();
}

/**
 * Enable shelter theme and set as default.
 */
function shelter_base_update_7003() {
  theme_enable(array('theme_default' => 'shelter'));
  variable_set('theme_default', 'shelter');
}

/**
 * Enable jQuery Update and set some default settings.
 */
function shelter_base_update_7004() {
  module_enable(array('jquery_update'));
  variable_set('jquery_update_jquery_version', '1.10');
  variable_set('jquery_update_jquery_admin_version', '1.5');
  variable_set('jquery_update_compression_type', 'min');
  variable_set('jquery_update_jquery_cdn', 'google');
}

/**
 * Update required module list.
 */
function shelter_base_update_7005() {
  _shelter_base_module_enable_all();
}

/**
 * Set jquery version back to 1.8 so it doesn't conflict with admin menu
 */
function shelter_base_update_7006() {
  variable_set('jquery_update_jquery_version', '1.8');
  variable_set('jquery_update_jquery_admin_version', '1.8');
}

/**
 * Update required module list (field_group).
 */
function shelter_base_update_7007() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Update required module list (uuid).
 */
function shelter_base_update_7008() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Update required module list (cluster_search).
 */
function shelter_base_update_7009() {
  _shelter_base_modules_enable('custom');
}

/**
 * Refresh pathauto paths for node/%/discussions and /documents.
 */
function shelter_base_update_7010() {
  variable_set('pathauto_cluster_discussions_pattern', '[node:content-type]/[node:title]/discussions');
  variable_set('pathauto_cluster_docs_pattern', '[node:content-type]/[node:title]/documents');
  cluster_discussions_pathauto_bulkupdate();
  cluster_docs_pathauto_bulkupdate();
}

/**
 * Update required module list (cluster_workflow).
 */
function shelter_base_update_7011() {
  _shelter_base_modules_enable('custom');
}

/**
 * Re-index site.
 */
function shelter_base_update_7012() {
  search_api_index_reindex('default_node_index');
}

/**
 * Update taxonomy terms.
 */
function shelter_base_update_7013() {
  features_revert(array('cluster_taxonomy'));
}

/**
 * Update required module list (cluster_nav).
 */
function shelter_base_update_7014() {
  _shelter_base_modules_enable('custom');
}

/**
 * Regenerate region aliases and menu items.
 */
function shelter_base_update_7015() {
  cluster_og_regenerate_region_aliases();
}

/**
 * Field name change: 'field_is_resource_document' to 'field_is_reference_document'.
 */
function shelter_base_update_7016() {
  field_delete_field('field_is_resource_document');
  search_api_index_reindex('default_node_index');
}

/**
 * Update required module list (respondjs).
 */
function shelter_base_update_7017() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Update required module list (underscore, libraries).
 */
function shelter_base_update_7018() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Update required module list (cluster_nav_views).
 */
function shelter_base_update_7019() {
  _shelter_base_modules_enable('custom');
}

/**
 * Update required module list (chosen).
 */
function shelter_base_update_7020() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Delete old document_tag field.
 */
function shelter_base_update_7021() {
  field_delete_field('field_document_tag');
}

/**
 * Disable restrict_node_page_view module.
 */
function shelter_base_update_7022() {
  module_disable(array('restrict_node_page_view'));
}

/**
 * Update custom required modules list to incude cluster_context.
 */
function shelter_base_update_7023() {
  _shelter_base_modules_enable('custom');
}

/**
 * Enable field_collection module.
 */
function shelter_base_update_7024() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Enable partial module.
 */
function shelter_base_update_7025() {
  _shelter_base_modules_enable('custom');
}

/**
 * Enable wysiwyg module.
 */
function shelter_base_update_7026() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Re-index site.
 */
function shelter_base_update_7027() {
  search_api_index_reindex('default_node_index');
}

/**
 * Enable wysiwyg module.
 */
function shelter_base_update_7028() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Revert features for multilingual settings.
 */
function shelter_base_update_7029() {
  features_revert_module('shelter_base');
  features_revert_module('cluster_discussions');
  features_revert_module('cluster_og');
}

/**
 * Enable variable, menu translation and other i18n modules.
 */
function shelter_base_update_7030() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Revert features for menu multilingual settings.
 */
function shelter_base_update_7031() {
  features_revert_module('shelter_base');
}

/**
 * Revert features for taxonomy fields.
 */
function shelter_base_update_7032() {
  features_revert_module('shelter_base');
  features_revert_module('cluster_taxonomy');
  features_revert_module('cluster_docs');
  features_revert_module('cluster_og');
}

/**
 * Set the language to English for all content except documents.
 * This should be updated in the import script.
 */
function shelter_base_update_7033() {
  // Don't update the db.  Use the API. See update_7035().
/*
  db_update('node')
  ->fields(array('language' => 'en'))
  ->condition('type', 'document', '!=')
  ->execute();
*/
}

/**
 * Revert base feature for transliteration settings.
 */
function shelter_base_update_7034() {
  features_revert_module('shelter_base');
}

/**
 * Save all nodes to force setting the en language on all nodes.
 */
function shelter_base_update_7035() {
  $q = new EntityFieldQuery();
  $res = $q->entityCondition('entity_type', 'node')->entityCondition('bundle', 'document', '!=')->execute();
  $nodes = node_load_multiple(array_keys($res['node']));
  foreach($nodes as $node) {
    $node->language = 'en';
    node_save($node);
  }
}

/**
 * Revert features for taxonomy fields.
 */
function shelter_base_update_7036() {
  features_revert_module('cluster_taxonomy');
  features_revert_module('cluster_docs');
  features_revert_module('cluster_og');
}

/**
 * Revert shelter_base 
 */
function shelter_base_update_7037() {
  features_revert_module('shelter_base');
}

/**
 * Enable variable translation.
 */
function shelter_base_update_7038() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Enable events feature module.
 */
function shelter_base_update_7039() {
  _shelter_base_modules_enable('custom');
}

/**
 * Refresh pathauto paths for node/%/events.
 */
function shelter_base_update_7040() {
  variable_set('pathauto_cluster_events_pattern', '[node:content-type]/[node:title]/events');
  cluster_events_pathauto_bulkupdate();
}

/**
 * Revert event feature. 
 */
function shelter_base_update_7041() {
  features_revert_module('cluster_events');
}

/**
 * Revert og feature - add multilibgual features to COP. 
 */
function shelter_base_update_7042() {
  features_revert_module('cluster_og');
}

/**
 * Revert workflow feature. 
 */
function shelter_base_update_7043() {
  features_revert_module('cluster_workflow');
}

/**
 * Remove duplicates from regions menu.
 */
function shelter_base_update_7044() {
  $menu = menu_tree_all_data('menu-regions');

  // Recursive function to delete duplicates.
  $function = function(&$items) use (&$function) {
    $temp = array();
    $to_delete = array();
    foreach ($items as $key => $item) {
      $path = $item['link']['link_path'];
      $has_children = $item['link']['has_children'];
      $mlid = $item['link']['mlid'];
      if (!isset($temp[$path])) {
        $temp[$path] = array($mlid, $has_children);
      }
      elseif ($temp[$path][1] && !$has_children) {
        $to_delete[] = $mlid;
      }
      elseif (!$temp[$path][1] && $has_children) {
        $to_delete[] = $temp[$path][0];
        $temp[$path] = array($mlid, $has_children);
      }
      elseif (!$temp[$path][1] && !$has_children) {
        $to_delete[] = $mlid;
      }

      if ($has_children) {
        $function($item['below']);
      }
    }
    foreach ($to_delete as $mlid) {
      menu_link_delete($mlid);
    }
  };

  $function($menu);
}

/**
 * Revert workflow feature.
 */
function shelter_base_update_7045() {
  features_revert_module('cluster_workflow');
}

/**
 * Revert discussions feature.
 */
function shelter_base_update_7046() {
  features_revert_module('cluster_discussions');
}

/**
 * Revert discussions feature.
 */
function shelter_base_update_7047() {
  features_revert_module('cluster_user');
}

/**
 * Revert all features to avoid collisions from local environments.
 */
function shelter_base_update_7048() {
  features_revert_module('cluster_discussions');
  features_revert_module('cluster_docs');
  features_revert_module('cluster_events');
  features_revert_module('cluster_og');
  features_revert_module('cluster_search');
  features_revert_module('cluster_taxonomy');
  features_revert_module('cluster_user');
  features_revert_module('cluster_workflow');
  features_revert_module('cluster_user');
  features_revert_module('shelter_base');
}

/**
 * Revert feature cluster_docs.
 */
function shelter_base_update_7049() {
  features_revert_module('cluster_docs');
}

/**
 * Enable libraries feature module.
 */
function shelter_base_update_7050() {
  _shelter_base_modules_enable('custom');
}

/**
 * Enable IMCE.
 */
function shelter_base_update_7051() {
  _shelter_base_modules_enable('contrib');
}

/**
 * Revert features for wysiwyg and IMCE permissions and settings.
 */
function shelter_base_update_7052() {
  features_revert_module('cluster_user');
  features_revert_module('shelter_base');
}

/**
 * Revert base features. 
 */
function shelter_base_update_7053() {
  features_revert_module('shelter_base');
}

/**
 * Revert user feature.
 */
function shelter_base_update_7054() {
  features_revert_module('cluster_user');
}

/**
 * Revert library feature, adding arbitrary doc library.
 */
function shelter_base_update_7055() {
  features_revert_module('cluster_library');
}

/**
 * Enable cluster_contact.
 */
function shelter_base_update_7056() {
  module_enable(array('cluster_contact'));
}

/**
 * Revert doc and user features.
 */
function shelter_base_update_7057() {
  features_revert_module('cluster_docs');
  features_revert_module('cluster_user');
}

/**
 * Revert user features (wysiwyg profile).
 */
function shelter_base_update_7058() {
  features_revert_module('cluster_user');
}

/**
 * Revert docs feature (VBO for mass assignement of reference).
 */
function shelter_base_update_7059() {
  features_revert_module('cluster_docs');
}

/**
 * Revert just libraries - update seems ot be chocking on taxonomy.
 */
function shelter_base_update_7060() {
  //features_revert_module('cluster_docs');
  //features_revert_module('cluster_taxonomy');
  features_revert_module('cluster_libraries');
}
