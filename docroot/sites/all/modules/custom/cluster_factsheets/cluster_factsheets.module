<?php
/**
 * @file
 * Code for the Cluster Factsheets feature.
 */

include_once 'cluster_factsheets.features.inc';

/**
 * Implements hook_menu().
 */
function cluster_factsheets_menu() {
  $items['node/%node/add-factsheet'] = [
    'title' => 'New Factsheet',
    'page callback' => 'cluster_factsheets_add',
    'page arguments' => [1],
    'access callback' => 'cluster_factsheets_add_access',
    'access arguments' => [1],
    'type' => MENU_CALLBACK,
//    'type' => MENU_LOCAL_TASK,
//    'weight' => 1,
  ];

  $items['node/%node/factsheets'] = array(
    'title' => 'Factsheets',
    'page callback' => 'cluster_factsheets_all',
    'page arguments' => array(1),
    'access callback' => 'og_is_group',
    'access arguments' => array(0, 1),
    'title callback' => '_cluster_factsheets_title_callback',
    'title arguments' => array(1),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Menu title callback.
 *
 * @see _cluster_docs_title_callback() (mostly copied from there)
 */
function _cluster_factsheets_title_callback($node) {
  return $node->title . ' - ' . t('Factsheets');
}

function cluster_factsheets_add_access($node) {
  if (!og_is_group('node', $node))
    return FALSE;

  return og_user_access('node', $node->nid, 'create factsheet content');
}

function cluster_factsheets_add($group_node) {
  $options = ['query' => drupal_get_query_parameters()];
  if (isset($options['query']['group']))
    $options['query']['destination'] = 'node/' . $options['query']['group'];

  $manager = GroupContentManager::getInstance($group_node);
  $factsheets = $manager->getFactsheets(1);
  if (count($factsheets))
    drupal_goto("node/{$factsheets[0]}/clone/" . clone_get_token($factsheets[0]), $options);
  else
    drupal_goto('node/add/factsheet', $options);
}

/**
 * @param $node
 * @return array
 */
function cluster_factsheets_all($node) {
  $manager = GroupContentManager::getInstance($node);
  $items = array_filter(array_map(function($node) {
    return node_view($node, 'preview_block');
  }, node_load_multiple($manager->getFactsheets())));
  return [
    '#theme' => 'factsheet_list',
    '#items' => $items,
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function cluster_factsheets_preprocess_node(&$variables) {
  $node = $variables['node'];
  if ($node->type !== 'factsheet')
    return;

  $wrapper = entity_metadata_wrapper('node', $node);

  $variables['cluster_factsheets']['indicators'] = cluster_factsheets_main_indicators($node);

  $field_image = $wrapper->field_image->value();
  $variables['cluster_factsheets']['main_image_url'] = image_style_url('factsheet_image', $field_image['uri']);
}

/**
 * Implements hook_theme().
 */
function cluster_factsheets_theme($existing, $type, $theme, $path) {
  return [
    'factsheet_list' => [
      'template' => 'factsheet-list',
      'variables' => ['items' => []],
      'path' => drupal_get_path('module', 'cluster_factsheets') . '/templates',
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function cluster_factsheets_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id !== 'factsheet_node_form')
    return;

  $form['title']['#access'] = FALSE;

  if (arg(2) === 'clone')
    // Cloning a factsheet: reset the date to "today"
    $form['field_date']['und'][0]['#default_value']['value'] = date('Y-m-d');
}

/**
 * Implements hook_node_presave().
 */
function cluster_factsheets_node_presave($node) {
  if ($node->type !== 'factsheet')
    return;

  $wrapper = entity_metadata_wrapper('node', $node);

  $date = date('Y-m', $wrapper->field_date->value());
  $group = $wrapper->og_group_ref->value();
  $group_title = count($group) ? $group[0]->title : '';

  $node->title = $date . ' Factsheet' . ($group_title ? ' - ' . $group_title : '');
}

/**
 * Implements hook_node_validate().
 */
function cluster_factsheets_node_validate($node, $form, &$form_state) {
  $wrapper = entity_metadata_wrapper('node', $node);
  $group = $wrapper->og_group_ref->value();
  if (!count($group)) {
    // This factsheet doesn't belong to any group
    form_set_error('og_group_ref', t('No response specified.'));
    return;
  }

  if ($node->status !== NODE_PUBLISHED)
    // Date condition not required for unpublished nodes
    return;

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'factsheet')
    ->propertyCondition('status', NODE_PUBLISHED)
    ->fieldCondition('og_group_ref', 'target_id', $group[0]->nid)
    ->fieldCondition('field_date', 'value', date('Y-m-d', $wrapper->field_date->value()))
    ->range(NULL, 1);

  if ($node->nid)
    // Exclude current node (if editing)
    $query->propertyCondition('nid', $node->nid, '<>');

  $result = $query->execute();
  if (isset($result['node'])) {
    $nids = array_keys($result['node']);
    if (count($nids) >= 1)
      form_set_error('field_date', t('A factsheet already exists for this date.'));
  }
}

function cluster_factsheets_is_group_factsheets_page() {
  $router_item = menu_get_item(current_path());

  if ($router_item && isset($router_item['path']))
    return $router_item['path'] === 'node/%/factsheets';

  return FALSE;
}

function cluster_factsheets_main_indicators($node) {
  if (!$node || $node->type !== 'factsheet')
    return [];

  $wrapper = entity_metadata_wrapper('node', $node);

  $n = function($value, $prefix = '') {
    if ($value > 100000)
      return $prefix . number_format($value / 1000000, 1, '.', ' ') . ' M';
    return $prefix . number_format($value, 0, '.', ' ');
  };

  $funded = round($wrapper->field_fsi_funded->value() / $wrapper->field_fsi_funding_required->value() * 100) . '%';

  // TODO
  return [
    'partners' => $wrapper->field_fsi_partners->value(),
    'required (funded)' => $n($wrapper->field_fsi_funding_required->value(), '$') . ' (' . $funded . ')',
    'people reached / targeted' => $n($wrapper->field_fsi_people_reached->value()) . ' / ' . $n($wrapper->field_fsi_people_targeted->value()),
  ];
}

/**
 *  Implements hook_entity_info_alter().
 */
function cluster_factsheets_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['factsheet_summary'] = array(
    'label' => t('Factsheet summary'),
    'custom settings' => FALSE,
  );
}
