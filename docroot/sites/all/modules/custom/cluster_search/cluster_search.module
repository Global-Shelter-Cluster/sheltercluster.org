<?php
/**
 * @file
 * Code for the cluster_search feature.
 */

include_once 'cluster_search.features.inc';

/**
 *  Implements hook_preprocess_page().
 */
function cluster_search_preprocess_page(&$variables) {
  $search_form = module_invoke('search', 'block_view', 'form');
  $search_form['content']['#attributes']['class'] = 'search';
  $search_form['content']['search_block_form']['#attributes']['placeholder'] = t('Search site');
  $variables['search_form'] = $search_form;

  // We need to load the form again to avoid duplicate IDs.
  $search_form = module_invoke('search', 'block_view', 'form');
  $search_form['content']['#attributes']['class'] = 'search';
  $search_form['content']['search_block_form']['#attributes']['placeholder'] = t('Search site');
  $variables['search_form_bottom'] = $search_form;
}

/**
 * Implements hook_facetapi_facet_info_alter().
 */
function cluster_search_facetapi_facet_info_alter(array &$facet_info, array $searcher_info) {
  if (!empty($facet_info['field_language'])) {
    $facet_info['field_language']['map callback'] = '_cluster_search_field_language_facet_map_callback';
  }
}

function _cluster_search_field_language_facet_map_callback(array $values, array $options = array()) {
  $map = array();
  $languages = language_list();

  foreach ($values as $value) {
    if (empty($languages[$value])) {
      continue;
    }

    $map[$value] = $languages[$value]->name;
  }

  return $map;
}
